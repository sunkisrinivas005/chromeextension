{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","undefined","sid","setSID","loading","setLoading","view","setView","product","setProduct","url","useEffect","window","addEventListener","event","source","data","type","console","log","location","href","value","queryString","parse","refid","Object","values","split","advertiserId","fetch","then","res","json","lid","catch","err","Provider","getSID","postMessage","clearLocalStorage","regex","Modal","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","id","className","style","transform","textAlign","color","padding","alignSelf","justifyContent","margin","length","width","height","marginTop","fontWeight","marginBottom","test","programName","categories","promotionalTypes","flexDirection","Button","variant","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"ySAOeA,EANW,WACxB,MAAO,CACLC,eAAiB,CAAEC,EAAG,IAAKC,GAAI,M,iBCCtBC,EAAeC,IAAMC,cAAc,IA0FjCC,EAxFO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfP,EAAmBD,IAAnBC,eAD8B,EAEhBQ,wBAASC,GAFO,mBAE/BC,EAF+B,KAE1BC,EAF0B,OAGRH,oBAAS,GAHD,mBAG/BI,EAH+B,KAGtBC,EAHsB,OAIdL,oBAAS,GAJK,mBAIhCM,EAJgC,KAIzBC,EAJyB,OAKTP,mBAAS,IALA,mBAKhCQ,EALgC,KAKvBC,EALuB,OAMjBT,mBAAS,IANQ,mBAMhCU,EANgC,UAsEtC,OA1CAC,qBAAU,WAERC,OAAOC,iBAAiB,WAAW,SAASC,GAC1C,GAAIA,EAAMC,SAAWH,OAArB,CACA,GAAIE,EAAME,KAAKC,MAA6B,eAApBH,EAAME,KAAKC,KAAwB,CACzDd,EAAOW,EAAME,KAAKd,KAClBgB,QAAQC,IAAIP,OAAOQ,SAASC,KAAM,SAClC,IAAMC,EAAQC,IAAYC,MACxBZ,OAAOQ,SAASC,MAEZI,EAAQC,OAAOC,OAAOL,GAAO,GACjCJ,QAAQC,IAAIM,EAAO,UACnBA,EAAQA,EAAMG,MAAM,OACpBV,QAAQC,IAAIM,EAAO,SACnB,IAAII,EAAeJ,EAAM,GAAKA,EAAM,GAAK,GAIzCK,MAAM,yCAA0CD,GAAcE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAf,GACzEA,EAAK,GAAbkB,IACRzB,EAAWO,EAAK,IAChBT,GAAQ,GACRF,GAAW,MACV8B,OAAM,SAAAC,GACP3B,EAAW,IACXF,GAAQ,GACRF,GAAW,MAIdS,EAAME,KAAKC,MAA6B,uBAApBH,EAAME,KAAKC,OAChCC,QAAQC,IAAIL,EAAME,KAAKM,MAAO,wBAC9Bb,EAAW,IACXJ,GAAW,GACXE,GAAQ,IAERO,EAAME,KAAKC,MAA6B,kBAApBH,EAAME,KAAKC,MAChCC,QAAQC,IAAI,UAAYL,EAAME,KAAKM,aAGrC,IAGD,kBAAC3B,EAAa0C,SAAd,CACEf,MAAO,CACLpB,MACAoC,OAlEN,WACEjC,GAAW,GACXO,OAAO2B,YAAY,CAAEtB,KAAM,WAAa,MAiEpCzB,iBACAc,OACAF,UACAI,UACAE,MACA8B,kBAzDN,WACEnC,GAAW,GACXO,OAAO2B,YAAY,CAACtB,KAAM,uBAAwB,QA0D/ClB,I,0CCjFA0C,EAAQ,iBA4NAC,EAzND,WACZ,OACE,kBAAC/C,EAAagD,SAAd,MACG,gBACCnD,EADD,EACCA,eACAoD,EAFD,EAECA,yBACA1C,EAHD,EAGCA,IACAoC,EAJD,EAICA,OACAlC,EALD,EAKCA,QACAE,EAND,EAMCA,KACAE,EAPD,EAOCA,QAEAgC,GATD,EAQC9B,IARD,EASC8B,mBATD,OAWC,kBAAC,IAAD,CACEK,OAAO,gBACPC,gBAAiB,CAAErD,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GAC1DqD,SACEH,EACI,CAAEnD,EAAGD,EAAeC,EAAGC,EAAGF,EAAeE,GACzC,MAGN,yBACEsD,GAAG,QACHC,UAAU,eACVC,MAAO,CACLC,UAAW3D,IAGZ0B,QAAQC,IAAIX,EAAS,WACtB,yBAAKyC,UAAU,6BACb,oCACE,yBAAKA,UAAU,cACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,YAAYC,MAAO,CAAEE,UAAW,WAC7C,wBAAIF,MAAO,CAAEG,MAAO,UACjB,IADH,sCAKF,yBAAKJ,UAAU,iBACb,oCACG3C,EACC,yBACE4C,MAAO,CACLI,QAAS,mBACTC,UAAU,WAGZ,yBACEN,UAAU,gBACVC,MAAO,CACLM,eAAgB,gBAChBC,OAAQ,SAGT,yBACCR,UAAY,YAEX/C,GAAOA,EAAIwD,OACV,kBAAC,IAAD,CACER,MAAO,CACLS,MAAO,OACPC,OAAQ,OACRP,MAAO,aAIX,kBAAC,IAAD,CACEH,MAAO,CACLS,MAAO,OACPC,OAAQ,OACRP,MAAO,UAKf,yBAAKJ,UAAU,WAAWC,MAAO,CAAEM,eAAe,kBAClD,wBACIN,MAAO,CAAEG,MAAO,QAASQ,UAAW,QADxC,aAKE,uBAAGX,MAAO,CAAEG,MAAO,QAASS,WAAY,SACrC5D,GAAY,kBAInB,yBACE+C,UAAU,gBACVC,MAAO,CACLM,eAAgB,gBAChBC,OAAQ,SAGV,yBACCR,UAAY,YAEV/C,GAAOA,EAAIwD,OACV,kBAAC,IAAD,CACER,MAAO,CACLS,MAAO,OACPC,OAAQ,OACRP,MAAO,aAIX,kBAAC,IAAD,CACEH,MAAO,CACLS,MAAO,OACPC,OAAQ,OACRP,MAAO,UAKf,yBAAKJ,UAAU,WAAWC,MAAO,CAAEM,eAAe,kBAChD,wBACEN,MAAO,CAAEG,MAAO,QAASU,aAAc,QADzC,aAKA,uBAAGb,MAAO,CAAEG,MAAO,QAASS,WAAY,OAAQC,aAAa,QAC1D7D,GAAOA,EAAIwD,OACRjB,EAAMuB,KAAK9D,GACT,mBACA,mBACF,mBAIV,yBACE+C,UAAU,gBACVC,MAAO,CACLM,eAAgB,gBAChBC,OAAQ,SAGV,yBACCR,UAAY,YAEVzC,GAAWA,EACV,kBAAC,IAAD,CACE0C,MAAO,CACLS,MAAO,OACPC,OAAQ,OACRP,MAAO,aAIX,kBAAC,IAAD,CACEH,MAAO,CACLS,MAAO,OACPC,OAAQ,OACRP,MAAO,UAKf,yBAAKJ,UAAU,WAAWC,MAAO,CAAEM,eAAe,kBAChD,wBACEN,MAAO,CAAEG,MAAO,QAASU,aAAc,QAEtCvD,EAAU,gBAAkB,kBAE/B,uBAAG0C,MAAO,CAAEG,MAAO,QAASS,WAAY,SACrCtD,GAAWA,EAAQqB,aAClB,oCACA,gDAAsBrB,EAAQyD,aAC9B,6BACA,6CAAmBzD,EAAQ0D,YAC3B,6BACA,oDAA0B1D,EAAQ2D,kBAClC,6BACA,0CAAgB3D,EAAQ0B,MAEtB,sCAIV,yBAAKgB,MAAQ,CAACkB,cAAc,MAAOhB,UAAU,WAC7C,kBAACiB,EAAA,EAAD,CACAC,QAAU,YACVjB,MAAQ,UACRkB,QAAW,kBAAM/B,MAHjB,yBASApC,EACF,gDACE,OAELE,GAAS,yBACR4C,MAAO,CACLI,QAAS,OACTF,UAAW,SACXW,aAAc,SAGhB,4BAAQQ,QAAS,kBAAMjC,KAAUW,UAAU,gBAA3C,0BCrMPuB,MARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,Q,MCNNC,IAASC,OACP,oCACE,kBAAC,EAAD,OACGC,SAASC,eAAe,mB","file":"static/js/main.6250aa6c.chunk.js","sourcesContent":["\r\nconst useWindowPosition = () => {\r\n  return {\r\n    windowPosition:  { x: 800, y: -30 },\r\n  }\r\n};\r\n\r\nexport default useWindowPosition;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useWindowPosition from '../Hooks/useWindowPosition';\r\nimport queryString from 'query-string'\r\n\r\nexport const ModalContext = React.createContext({});\r\n\r\nconst ModalProvider = ({ children }) => {\r\n  const { windowPosition } = useWindowPosition();\r\n  const [sid, setSID] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const[view , setView] = useState(false);\r\n  const[product, setProduct] = useState(\"\");\r\n  const[url, setUrl] = useState(\"\");\r\n\r\n  function getSID() {\r\n    setLoading(true)\r\n    window.postMessage({ type: \"GET_SID\" }, \"*\");\r\n    // fetch('https://iapi.corp.flexoffers.com/link/24.221154.6646609').then(res => res.json()).then(data => {\r\n    //         const { lid } = data[0];\r\n    //         setProduct(data[0]);\r\n    //         setView(true);\r\n    //         setLoading(false);\r\n    //       }).catch(err => {\r\n    //         setProduct('');\r\n    //         setView(true);\r\n    //         setLoading(false);\r\n    //       });\r\n  }\r\n\r\n  function clearLocalStorage(){\r\n    setLoading(true);\r\n    window.postMessage({type: 'CLEAR_LOCAL_STORAGE'}, '*');\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Set up event listeners from Content script\r\n    window.addEventListener(\"message\", function(event) {\r\n      if (event.source !== window) return;\r\n      if (event.data.type && (event.data.type === \"SID_RESULT\")) {\r\n        setSID(event.data.sid);\r\n        console.log(window.location.href, \"test.\")\r\n        const value = queryString.parse(\r\n          window.location.href\r\n        );\r\n          let refid = Object.values(value)[0];\r\n          console.log(refid, 'refid.')\r\n          refid = refid.split('FOF');\r\n          console.log(refid, 'refiD')\r\n          let advertiserId = refid[0] ? refid[0] : '';\r\n          // let programId = refid[1] ? refid[1] : '';\r\n          // let promotionalId = refid[2] ? refid[2].split('FOF')[0] : '';\r\n          // let concat = `advertiserId - ${advertiserId} --- programId --- ${programId} ---- promotionalId --- ${promotionalId}`;\r\n          fetch('https://iapi.corp.flexoffers.com/link/'+ advertiserId).then(res => res.json()).then(data => {\r\n            const { lid } = data[0];\r\n            setProduct(data[0]);\r\n            setView(true);\r\n            setLoading(false);\r\n          }).catch(err => {\r\n            setProduct('');\r\n            setView(true);\r\n            setLoading(false);\r\n          });\r\n        // }\r\n      }\r\n      if(event.data.type && (event.data.type === \"CLEAR_LOCAL_RESULT\")){\r\n        console.log(event.data.value, 'from message cleared');\r\n        setProduct('');\r\n        setLoading(false);\r\n        setView(false);\r\n      }\r\n     if(event.data.type && (event.data.type === \"CHECK_API_HIT\")){\r\n       console.log('testing',  event.data.value);\r\n     }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        sid,\r\n        getSID,\r\n        windowPosition,\r\n        view,\r\n        loading,\r\n        product,\r\n        url,\r\n        clearLocalStorage\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { ModalContext } from '../Contexts/ModalProvider';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst  regex = /(?:\\d+FOF\\d+)/i;\r\n// regex.test(sid) ? \"sid is valid\" : \"sid is not valid\"\r\n\r\nconst Modal = () => {\r\n  return (\r\n    <ModalContext.Consumer>\r\n      {({\r\n        windowPosition,\r\n        hasDraggedWindowPosition,\r\n        sid,\r\n        getSID,\r\n        loading,\r\n        view,\r\n        product,\r\n        url,\r\n        clearLocalStorage\r\n      }) => (\r\n        <Draggable\r\n          handle=\".modal-handle\"\r\n          defaultPosition={{ x: windowPosition.x, y: windowPosition.y }}\r\n          position={\r\n            hasDraggedWindowPosition\r\n              ? { x: windowPosition.x, y: windowPosition.y }\r\n              : null\r\n          }\r\n        >\r\n          <div\r\n            id=\"modal\"\r\n            className=\"modal-window\"\r\n            style={{\r\n              transform: windowPosition,\r\n            }}\r\n          >\r\n            {console.log(product, 'product')}\r\n            <div className=\"modal-window-inner-border\">\r\n              <>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"modal-handle\"></div>\r\n                  <div className=\"col-lg-12\" style={{ textAlign: 'center', }}>\r\n                    <h3 style={{ color: 'white' }}>\r\n                      {' '}\r\n                      Direct Advertiser - Tracking Tool\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"modal-content\">\r\n                    <>\r\n                      {view ? (\r\n                        <div\r\n                          style={{\r\n                            padding: '25px 0px 0px 0px',\r\n                            alignSelf:\"center\"\r\n                          }}\r\n                         >\r\n                          <div\r\n                            className=\"col-lg-12 row\"\r\n                            style={{\r\n                              justifyContent: 'space-between',\r\n                              margin: '10px',\r\n                            }}\r\n                          >\r\n                             <div\r\n                              className = 'col-lg-2'\r\n                            >\r\n                              {sid && sid.length ? (\r\n                                <CheckCircleIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: '#008000',\r\n                                  }}\r\n                                />\r\n                              ) : (\r\n                                <CancelIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: 'red',\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-lg-9\" style={{ justifyContent:\"space-between\" }}>\r\n                            <h5\r\n                                style={{ color: 'black', marginTop: '4px' }}\r\n                              >\r\n                                SID found\r\n                              </h5>\r\n                              <p style={{ color: 'black', fontWeight: 'bold' }}>\r\n                                {sid ? sid : 'no sid found'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className=\"col-lg-12 row\"\r\n                            style={{\r\n                              justifyContent: 'space-between',\r\n                              margin: '10px',\r\n                            }}\r\n                          >\r\n                            <div\r\n                             className = 'col-lg-2'\r\n                            >\r\n                              {sid && sid.length ? (\r\n                                <CheckCircleIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: '#008000',\r\n                                  }}\r\n                                />\r\n                              ) : (\r\n                                <CancelIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: 'red',\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-lg-9\" style={{ justifyContent:\"space-between\" }}>\r\n                              <h5\r\n                                style={{ color: 'black', marginBottom: '0px' }}\r\n                              >\r\n                                SID Valid\r\n                              </h5>\r\n                              <p style={{ color: 'black', fontWeight: 'bold', marginBottom:'2px' }}>\r\n                                {sid && sid.length\r\n                                  ? regex.test(sid)\r\n                                    ? 'valid sid format'\r\n                                    : 'sid is not valid'\r\n                                  : 'sid not found'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className=\"col-lg-12 row\"\r\n                            style={{\r\n                              justifyContent: 'space-between',\r\n                              margin: '10px',\r\n                            }}\r\n                          >\r\n                            <div\r\n                             className = 'col-lg-2'\r\n                            >\r\n                              {product && product ? (\r\n                                <CheckCircleIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: '#008000',\r\n                                  }}\r\n                                />\r\n                              ) : (\r\n                                <CancelIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: 'red',\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-lg-9\" style={{ justifyContent:\"space-between\" }}>\r\n                              <h5\r\n                                style={{ color: 'black', marginBottom: '0px' }}\r\n                              >\r\n                                {product ? 'Link Id found' : 'Link not found' }\r\n                              </h5>\r\n                              <p style={{ color: 'black', fontWeight: 'bold' }}>\r\n                                {product && product.advertiserId ? (\r\n                                  <>\r\n                                  <span> Program name: {product.programName}</span>\r\n                                  <br />\r\n                                  <span>Categories: {product.categories}</span>\r\n                                  <br />\r\n                                  <span>promotionalTypes : {product.promotionalTypes}</span>\r\n                                  <br />\r\n                                  <span>link id: {product.lid}</span>\r\n                                  </>\r\n                                ) : 'Not a valid link from advertiser' }\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div style= {{flexDirection:'row', textAlign:'center'}}>\r\n                          <Button\r\n                          variant = 'contained'\r\n                          color = 'primary'\r\n                          onClick = {() => clearLocalStorage()}\r\n                          >\r\n                            Clear Local Storage\r\n                          </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : loading ? (\r\n                        <p>loading..........</p>\r\n                      ) : null}\r\n                    </>\r\n                  { !view &&  <div\r\n                      style={{\r\n                        padding: '10px',\r\n                        textAlign: 'center',\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    >\r\n                      <button onClick={() => getSID()} className=\"modal-button\">\r\n                        Load Values\r\n                      </button>\r\n                    </div>}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n          </div>\r\n        </Draggable>\r\n      )}\r\n    </ModalContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Modal from './Components/Modal';\r\nimport ModalProvider from './Contexts/ModalProvider';\r\n\r\n/**\r\n * @return {null}\r\n */\r\nfunction App() {\r\n  return (\r\n    <ModalProvider>\r\n      <Modal />\r\n    </ModalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>, document.getElementById('modal-window'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}