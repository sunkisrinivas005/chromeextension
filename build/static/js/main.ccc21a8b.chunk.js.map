{"version":3,"sources":["Hooks/useWindowPosition.js","Contexts/ModalProvider.js","Components/Modal.js","App.js","index.js"],"names":["useWindowPosition","windowPosition","x","y","ModalContext","React","createContext","ModalProvider","children","useState","sid","setSID","loading","setLoading","view","setView","product","setProduct","url","setUrl","type","setType","messageUrl","setMessageURL","useEffect","window","addEventListener","event","source","data","value","queryString","parse","location","href","refid","Object","values","advertiserId","split","length","fetch","then","res","json","lid","catch","err","urlSaved","Provider","getSID","postMessage","clearLocalStorage","getConversionTrackingUrl","regex","Modal","Consumer","hasDraggedWindowPosition","handle","defaultPosition","position","id","className","style","transform","console","log","textAlign","color","padding","alignSelf","justifyContent","margin","width","height","marginTop","fontWeight","marginBottom","test","programName","categories","promotionalTypes","flexDirection","Button","variant","onClick","marginLeft","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccc21a8b.chunk.js","sourcesContent":["\r\nconst useWindowPosition = () => {\r\n  return {\r\n    windowPosition:  { x: 800, y: -30 },\r\n  }\r\n};\r\n\r\nexport default useWindowPosition;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useWindowPosition from '../Hooks/useWindowPosition';\r\nimport queryString from 'query-string'\r\n\r\nexport const ModalContext = React.createContext({});\r\n\r\nconst ModalProvider = ({ children }) => {\r\n  const { windowPosition } = useWindowPosition();\r\n  const [sid, setSID] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const[view , setView] = useState(false);\r\n  const[product, setProduct] = useState(\"\");\r\n  const[url, setUrl] = useState(\"\");\r\n  const [type, setType] = useState(null);\r\n  const [messageUrl, setMessageURL] = useState('');\r\n  // const\r\n\r\n  function getSID() {\r\n    setLoading(true);\r\n    setType(1);\r\n    window.postMessage({ type: \"GET_SID\" }, \"*\");\r\n  }\r\n\r\n  function getConversionTrackingUrl() {\r\n    setLoading(true);\r\n    setType(2);\r\n    window.postMessage({type: \"MESSAGE_URL\"}, '*');\r\n    // setLoading(false);\r\n  }\r\n\r\n  function clearLocalStorage(){\r\n    setLoading(true);\r\n    window.postMessage({type: 'CLEAR_LOCAL_STORAGE'}, '*');\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Set up event listeners from Content script\r\n    window.addEventListener(\"message\", function(event) {\r\n      if (event.source !== window) return;\r\n      if (event.data.type && (event.data.type === \"SID_RESULT\")) {\r\n        setSID(event.data.sid);\r\n        const value = queryString.parse(\r\n          window.location.href\r\n        );\r\n          let refid = Object.values(value)[0];\r\n          // console.log(refid, 'refid.')\r\n          refid = refid && refid.split('FOF');\r\n          let advertiserId = refid[0] ? refid[0] : '';\r\n          if(advertiserId && advertiserId.length) {\r\n            fetch('https://iapi.corp.flexoffers.com/link/'+ advertiserId).then(res => res.json()).then(data => {\r\n              const { lid } = data[0];\r\n              setProduct(data[0]);\r\n              setView(true);\r\n              setLoading(false);\r\n            }).catch(err => {\r\n              setProduct('');\r\n              setView(true);\r\n              setLoading(false);\r\n            });\r\n          }else {\r\n            \r\n          }\r\n          // let programId = refid[1] ? refid[1] : '';\r\n          // let promotionalId = refid[2] ? refid[2].split('FOF')[0] : '';\r\n          // let concat = `advertiserId - ${advertiserId} --- programId --- ${programId} ---- promotionalId --- ${promotionalId}`;\r\n         \r\n        // }\r\n      }\r\n      if(event.data.type && (event.data.type === \"CLEAR_LOCAL_RESULT\")){\r\n        // console.log(event.data.value, 'from message cleared');\r\n        setProduct('');\r\n        setLoading(false);\r\n        setView(false);\r\n      }\r\n      if(event.data.type && (event.data.type === \"MESSAGE_URL_RESULT\")){\r\n        // console.log(event.data, 'from message cleared');\r\n        let values = event.data.value ? event.data.value : event.data.urlSaved;\r\n        const value = queryString.parse(\r\n          values\r\n        );\r\n        setUrl(values);\r\n        setView(true);\r\n        // console.log(value, 'values...')\r\n        setMessageURL(value);\r\n        setLoading(false)\r\n      }\r\n     if(event.data.type && (event.data.type === \"CHECK_API_HIT\")){\r\n      //  console.log('testing',  event.data.value);\r\n     }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        sid,\r\n        getSID,\r\n        windowPosition,\r\n        view,\r\n        loading,\r\n        product,\r\n        url,\r\n        clearLocalStorage,\r\n        messageUrl,\r\n        getConversionTrackingUrl,\r\n        type,\r\n        setView\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { ModalContext } from '../Contexts/ModalProvider';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst regex = /(?:\\d+FOF\\d+)/i;\r\n// regex.test(sid) ? \"sid is valid\" : \"sid is not valid\"\r\n\r\nconst Modal = () => {\r\n  return (\r\n    <ModalContext.Consumer>\r\n      {({\r\n        windowPosition,\r\n        hasDraggedWindowPosition,\r\n        sid,\r\n        getSID,\r\n        loading,\r\n        view,\r\n        product,\r\n        url,\r\n        clearLocalStorage,\r\n        messageUrl,\r\n        getConversionTrackingUrl,\r\n        type,\r\n        setView\r\n      }) => (\r\n        <Draggable\r\n          handle=\".modal-handle\"\r\n          defaultPosition={{ x: windowPosition.x, y: windowPosition.y }}\r\n          position={\r\n            hasDraggedWindowPosition\r\n              ? { x: windowPosition.x, y: windowPosition.y }\r\n              : null\r\n          }\r\n        >\r\n          <div\r\n            id=\"modal\"\r\n            className=\"modal-window\"\r\n            style={{\r\n              transform: windowPosition,\r\n            }}\r\n          >\r\n            {console.log(messageUrl, messageUrl['https://track.flexlinks.com/conversiontracking.ashx?AID'], 'messageUrl123')}\r\n            <div className=\"modal-window-inner-border\">\r\n              <>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"modal-handle\"></div>\r\n                  <div className=\"col-lg-12\" style={{ textAlign: 'center', }}>\r\n                    <h3 style={{ color: 'white' }}>\r\n                      {' '}\r\n                      Direct Advertiser - Tracking Tool\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"modal-content\">\r\n                    <>\r\n                      {view ? type === 1 ? (\r\n                        <div\r\n                          style={{\r\n                            padding: '25px 0px 0px 0px',\r\n                            alignSelf: \"center\"\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"col-lg-12 row\"\r\n                            style={{\r\n                              justifyContent: 'space-between',\r\n                              margin: '10px',\r\n                            }}\r\n                          >\r\n                            <div\r\n                              className='col-lg-2'\r\n                            >\r\n                              {sid && sid.length ? (\r\n                                <CheckCircleIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: '#008000',\r\n                                  }}\r\n                                />\r\n                              ) : (\r\n                                <CancelIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: 'red',\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-lg-9\" style={{ justifyContent: \"space-between\" }}>\r\n                              <h5\r\n                                style={{ color: 'black', marginTop: '4px' }}\r\n                              >\r\n                                SID found\r\n                              </h5>\r\n                              <p style={{ color: 'black', fontWeight: 'bold' }}>\r\n                                {sid ? sid : 'no sid found'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className=\"col-lg-12 row\"\r\n                            style={{\r\n                              justifyContent: 'space-between',\r\n                              margin: '10px',\r\n                            }}\r\n                          >\r\n                            <div\r\n                              className='col-lg-2'\r\n                            >\r\n                              {sid && sid.length ? (\r\n                                <CheckCircleIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: '#008000',\r\n                                  }}\r\n                                />\r\n                              ) : (\r\n                                <CancelIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: 'red',\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-lg-9\" style={{ justifyContent: \"space-between\" }}>\r\n                              <h5\r\n                                style={{ color: 'black', marginBottom: '0px' }}\r\n                              >\r\n                                SID Valid\r\n                              </h5>\r\n                              <p style={{ color: 'black', fontWeight: 'bold', marginBottom: '2px' }}>\r\n                                {sid && sid.length\r\n                                  ? regex.test(sid)\r\n                                    ? 'valid sid format'\r\n                                    : 'sid is not valid'\r\n                                  : 'sid not found'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className=\"col-lg-12 row\"\r\n                            style={{\r\n                              justifyContent: 'space-between',\r\n                              margin: '10px',\r\n                            }}\r\n                          >\r\n                            <div\r\n                              className='col-lg-2'\r\n                            >\r\n                              {product && product ? (\r\n                                <CheckCircleIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: '#008000',\r\n                                  }}\r\n                                />\r\n                              ) : (\r\n                                <CancelIcon\r\n                                  style={{\r\n                                    width: '60px',\r\n                                    height: '60px',\r\n                                    color: 'red',\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-lg-9\" style={{ justifyContent: \"space-between\" }}>\r\n                              <h5\r\n                                style={{ color: 'black', marginBottom: '0px' }}\r\n                              >\r\n                                {product ? 'Link Id found' : 'Link not found'}\r\n                              </h5>\r\n                              <p style={{ color: 'black', fontWeight: 'bold' }}>\r\n                                {product && product.advertiserId ? (\r\n                                  <>\r\n                                    <span> Program name: {product.programName}</span>\r\n                                    <br />\r\n                                    <span>Categories: {product.categories}</span>\r\n                                    <br />\r\n                                    <span>promotionalTypes : {product.promotionalTypes}</span>\r\n                                    <br />\r\n                                    <span>link id: {product.lid}</span>\r\n                                  </>\r\n                                ) : 'Not a valid link from advertiser'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div style={{ flexDirection: 'row', textAlign: 'center', justifyContent:'space-between' }}>\r\n                            <Button\r\n                              variant='contained'\r\n                              color='primary'\r\n                              onClick={() => clearLocalStorage()}\r\n                            >\r\n                              Clear Local Storage\r\n                            </Button>\r\n                            <Button\r\n                              variant='contained'\r\n                              color='primary'\r\n                              style = {{marginLeft:\"30px\"}}\r\n                              onClick={() => setView(false)}\r\n                            >\r\n                              Back\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : type === 2 ?\r\n                        <div style={{ color: \"black\" }}>\r\n                          <div className='col-lg-12' style={{ color: \"black\", justifyContent: 'center', alignSelf: 'center' }}>\r\n                            <p>AID : {messageUrl['https://track.flexlinks.com/conversiontracking.ashx?AID']}</p>\r\n                            <p>UID : {messageUrl['UID']}</p>\r\n                            <p>SID : {messageUrl['SID']}</p>\r\n                            <p>AMT : {messageUrl['AMT']}</p>\r\n                            <p style = {{width:'500px'}}>URL : {url}</p>\r\n                          </div>\r\n                          <div style={{ flexDirection: 'row', textAlign: 'center' }}>\r\n                            <Button\r\n                              variant='contained'\r\n                              color='primary'\r\n                              onClick={() => setView(false)}\r\n                            >\r\n                              Back\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                        : loading ? (\r\n                          <p>loading..........</p>\r\n                        ) : null : null\r\n                      }\r\n                    </>\r\n                    {!view &&\r\n                      <div className='col-lg-12 row' style={{ justifyContent: 'center' }}>\r\n                        <div\r\n                          style={{\r\n                            padding: '10px',\r\n                            textAlign: 'center',\r\n                            marginBottom: '25px',\r\n                          }}\r\n                        >\r\n                          <button onClick={() => getSID()} className=\"modal-button\">\r\n                            Validate Values\r\n                          </button>\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            padding: '10px',\r\n                            textAlign: 'center',\r\n                            marginBottom: '25px',\r\n                          }}\r\n                        >\r\n                          <button onClick={() => getConversionTrackingUrl()} className=\"modal-button\">\r\n                            Conversion Tracking Details\r\n                          </button>\r\n                        </div>\r\n                      </div>}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n          </div>\r\n        </Draggable>\r\n      )}\r\n    </ModalContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Modal from './Components/Modal';\r\nimport ModalProvider from './Contexts/ModalProvider';\r\n\r\n/**\r\n * @return {null}\r\n */\r\nfunction App() {\r\n  return (\r\n    <ModalProvider>\r\n      <Modal />\r\n    </ModalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n \r\n// setTimeout(() => {\r\n//     var req = new XMLHttpRequest();\r\n//     req.open(\r\n//       \"GET\",\r\n//       \"https://dev.track.flexlinks.com/conversiontracking.ashx?AID=\" +\r\n//         321412123 +\r\n//         \"&AMT=\" +\r\n//         1000 +\r\n//         \"&UID=\" +\r\n//         12994821 +\r\n//         \"&SID=\" +\r\n//         848330042233\r\n//     );\r\n//     req.send();\r\n//     console.log(\"Conversion Done\");\r\n// }, 5000);\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>, document.getElementById('modal-window'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}